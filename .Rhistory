axis.title.y = ggplot2::element_text(margin =ggplot2:: margin(r = 20),
hjust = 1),
axis.ticks = ggplot2::element_line(color = "#c2c3cf"),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 15),
hjust = 1),
axis.line = ggplot2::element_line(color = "#878890")
)
}
ggplot(big_epa_cars, aes(fuelCost08)) +
geom_histogram() +
theme_clean_light()
# themes
#' @title theme_clean_dark
#' @description  Custome ggplot theme
#'#'
#' @rdname theme_clean_dark
#'
#' @keywords internal
#' @export
#' @import ggplot2
#'
theme_clean_dark <- function(base_size = 14,
legend.position = 'bottom') {
ggplot2::theme_minimal(base_size = base_size) +
theme(
plot.margin = ggplot2::unit(rep(1.2, 4), "cm"),
plot.title = ggplot2::element_text(size = 19,
face = "bold",
color = "#f2f3f5",
margin = ggplot2::margin(b = 8)),
plot.background = ggplot2::element_rect(fill = "#1a1c2e"),
plot.subtitle = ggplot2::element_text(size = 14,
lineheight = 1.1,
color = "#e6e7eb",
margin = ggplot2::margin(b = 45)),
panel.grid.minor.x = ggplot2::element_blank(),
panel.grid.minor.y = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_line(color = "#21243a"),
panel.grid.major.x = ggplot2::element_line(color = "#21243a"),
axis.text = ggplot2::element_text(color = "#e6e7eb", size = 10),
axis.text.x = ggplot2::element_text(margin = ggplot2::margin(t = 5)),
axis.text.y = ggplot2::element_text(margin = ggplot2::margin(r = 5)),
axis.title = ggplot2::element_text(size = 14, color = "#e6e7eb"),
axis.title.y = ggplot2::element_text(margin =ggplot2:: margin(r = 20),
hjust = 1),
axis.ticks = ggplot2::element_line(color = "#c2c3cf"),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 15),
hjust = 1),
axis.line = ggplot2::element_line(color = "#878890")
)
}
#' @title theme_clean_light
#' @description  Custome ggplot theme
#'#'
#' @rdname theme_clean_light
#'
#' @keywords internal
#' @export
#' @import ggplot2
#'
theme_clean_light <- function(base_size = 14,
legend.position = 'bottom') {
ggplot2::theme_minimal(base_size = base_size) +
theme(
text = ggplot2::telement_text(family = "Open Sans"),
plot.margin = ggplot2::tunit(rep(1.2, 4), "cm"),
plot.title = ggplot2::telement_text(size = 19,
face = "bold",
margin = ggplot2::tmargin(b = 8)),
plot.subtitle = ggplot2::telement_text(size = 14,
lineheight = 1.1,
margin = ggplot2::tmargin(b = 45)),
panel.grid.minor.x = ggplot2::telement_blank(),
panel.grid.minor.y = ggplot2::telement_blank(),
axis.text = ggplot2::telement_text(size = 10),
axis.text.x = ggplot2::telement_text(margin = ggplot2::tmargin(t = 5)),
axis.text.y = ggplot2::telement_text(margin = ggplot2::tmargin(r = 5)),
axis.title = ggplot2::telement_text(size = 14),
axis.title.y = ggplot2::telement_text(margin = ggplot2::tmargin(r = 20),
hjust = 1),
axis.ticks = ggplot2::telement_line(),
axis.title.x = ggplot2::telement_text(margin = ggplot2::tmargin(t = 15),
hjust = 1),
axis.line = ggplot2::telement_line()
)
}
ggplot(big_epa_cars, aes(fuelCost08)) +
geom_histogram() +
theme_clean_light()
theme_clean_light <- function(base_size = 14,
legend.position = 'bottom') {
ggplot2::theme_minimal(base_size = base_size) +
theme(
text = ggplot2::element_text(family = "Open Sans"),
plot.margin = ggplot2::unit(rep(1.2, 4), "cm"),
plot.title = ggplot2::element_text(size = 19,
face = "bold",
margin = ggplot2::margin(b = 8)),
plot.subtitle = ggplot2::element_text(size = 14,
lineheight = 1.1,
margin = ggplot2::margin(b = 45)),
panel.grid.minor.x = ggplot2::element_blank(),
panel.grid.minor.y = ggplot2::element_blank(),
axis.text = ggplot2::element_text(size = 10),
axis.text.x = ggplot2:element_text(margin = ggplot2::margin(t = 5)),
axis.text.y = ggplot2::element_text(margin = ggplot2::margin(r = 5)),
axis.title = ggplot2::element_text(size = 14),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 20),
hjust = 1),
axis.ticks = ggplot2::element_line(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 15),
hjust = 1),
axis.line = ggplot2::element_line()
)
}
ggplot(big_epa_cars, aes(fuelCost08)) +
geom_histogram() +
theme_clean_light()
# themes
#' @title theme_clean_dark
#' @description  Custome ggplot theme
#'#'
#' @rdname theme_clean_dark
#'
#' @keywords internal
#' @export
#' @import ggplot2
#'
theme_clean_dark <- function(base_size = 14,
legend.position = 'bottom') {
ggplot2::theme_minimal(base_size = base_size) +
theme(
plot.margin = ggplot2::unit(rep(1.2, 4), "cm"),
plot.title = ggplot2::element_text(size = 19,
face = "bold",
color = "#f2f3f5",
margin = ggplot2::margin(b = 8)),
plot.background = ggplot2::element_rect(fill = "#1a1c2e"),
plot.subtitle = ggplot2::element_text(size = 14,
lineheight = 1.1,
color = "#e6e7eb",
margin = ggplot2::margin(b = 45)),
panel.grid.minor.x = ggplot2::element_blank(),
panel.grid.minor.y = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_line(color = "#21243a"),
panel.grid.major.x = ggplot2::element_line(color = "#21243a"),
axis.text = ggplot2::element_text(color = "#e6e7eb", size = 10),
axis.text.x = ggplot2::element_text(margin = ggplot2::margin(t = 5)),
axis.text.y = ggplot2::element_text(margin = ggplot2::margin(r = 5)),
axis.title = ggplot2::element_text(size = 14, color = "#e6e7eb"),
axis.title.y = ggplot2::element_text(margin =ggplot2:: margin(r = 20),
hjust = 1),
axis.ticks = ggplot2::element_line(color = "#c2c3cf"),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 15),
hjust = 1),
axis.line = ggplot2::element_line(color = "#878890")
)
}
#' @title theme_clean_light
#' @description  Custome ggplot theme
#'#'
#' @rdname theme_clean_light
#'
#' @keywords internal
#' @export
#' @import ggplot2
#'
theme_clean_light <- function(base_size = 14,
legend.position = 'bottom') {
ggplot2::theme_minimal(base_size = base_size) +
theme(
text = ggplot2::element_text(family = "Open Sans"),
plot.margin = ggplot2::unit(rep(1.2, 4), "cm"),
plot.title = ggplot2::element_text(size = 19,
face = "bold",
margin = ggplot2::margin(b = 8)),
plot.subtitle = ggplot2::element_text(size = 14,
lineheight = 1.1,
margin = ggplot2::margin(b = 45)),
panel.grid.minor.x = ggplot2::element_blank(),
panel.grid.minor.y = ggplot2::element_blank(),
axis.text = ggplot2::element_text(size = 10),
axis.text.x = ggplot2:element_text(margin = ggplot2::margin(t = 5)),
axis.text.y = ggplot2::element_text(margin = ggplot2::margin(r = 5)),
axis.title = ggplot2::element_text(size = 14),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 20),
hjust = 1),
axis.ticks = ggplot2::element_line(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 15),
hjust = 1),
axis.line = ggplot2::element_line()
)
}
ggplot(big_epa_cars, aes(fuelCost08)) +
geom_histogram() +
theme_clean_dark()
ggplot(big_epa_cars, aes(fuelCost08)) +
geom_histogram() +
theme_clean_light()
# themes
#' @title theme_clean_dark
#' @description  Custome ggplot theme
#'#'
#' @rdname theme_clean_dark
#'
#' @keywords internal
#' @export
#' @import ggplot2
#'
theme_clean_dark <- function(base_size = 14,
legend.position = 'bottom') {
ggplot2::theme_minimal(base_size = base_size) +
theme(
plot.margin = ggplot2::unit(rep(1.2, 4), "cm"),
plot.title = ggplot2::element_text(size = 19,
face = "bold",
color = "#f2f3f5",
margin = ggplot2::margin(b = 8)),
plot.background = ggplot2::element_rect(fill = "#1a1c2e"),
plot.subtitle = ggplot2::element_text(size = 14,
lineheight = 1.1,
color = "#e6e7eb",
margin = ggplot2::margin(b = 45)),
panel.grid.minor.x = ggplot2::element_blank(),
panel.grid.minor.y = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_line(color = "#21243a"),
panel.grid.major.x = ggplot2::element_line(color = "#21243a"),
axis.text = ggplot2::element_text(color = "#e6e7eb", size = 10),
axis.text.x = ggplot2::element_text(margin = ggplot2::margin(t = 5)),
axis.text.y = ggplot2::element_text(margin = ggplot2::margin(r = 5)),
axis.title = ggplot2::element_text(size = 14, color = "#e6e7eb"),
axis.title.y = ggplot2::element_text(margin =ggplot2:: margin(r = 20),
hjust = 1),
axis.ticks = ggplot2::element_line(color = "#c2c3cf"),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 15),
hjust = 1),
axis.line = ggplot2::element_line(color = "#878890")
)
}
#' @title theme_clean_light
#' @description  Custome ggplot theme
#'#'
#' @rdname theme_clean_light
#'
#' @keywords internal
#' @export
#' @import ggplot2
#'
theme_clean_light <- function(base_size = 14,
legend.position = 'bottom') {
ggplot2::theme_minimal(base_size = base_size) +
theme(
text = ggplot2::element_text(family = "Open Sans"),
plot.margin = ggplot2::unit(rep(1.2, 4), "cm"),
plot.title = ggplot2::element_text(size = 19,
face = "bold",
margin = ggplot2::margin(b = 8)),
plot.subtitle = ggplot2::element_text(size = 14,
lineheight = 1.1,
margin = ggplot2::margin(b = 45)),
panel.grid.minor.x = ggplot2::element_blank(),
panel.grid.minor.y = ggplot2::element_blank(),
axis.text = ggplot2::element_text(size = 10),
axis.text.x = ggplot2::element_text(margin = ggplot2::margin(t = 5)),
axis.text.y = ggplot2::element_text(margin = ggplot2::margin(r = 5)),
axis.title = ggplot2::element_text(size = 14),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 20),
hjust = 1),
axis.ticks = ggplot2::element_line(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 15),
hjust = 1),
axis.line = ggplot2::element_line()
)
}
ggplot(big_epa_cars, aes(fuelCost08)) +
geom_histogram() +
theme_clean_light()
ggplot(big_epa_cars, aes(fuelCost08)) +
geom_histogram() +
theme_clean_light()
warnings()
theme_clean_light <- function(base_size = 14,
legend.position = 'bottom') {
ggplot2::theme_minimal(base_size = base_size) +
theme(
plot.margin = ggplot2::unit(rep(1.2, 4), "cm"),
plot.title = ggplot2::element_text(size = 19,
face = "bold",
margin = ggplot2::margin(b = 8)),
plot.subtitle = ggplot2::element_text(size = 14,
lineheight = 1.1,
margin = ggplot2::margin(b = 45)),
panel.grid.minor.x = ggplot2::element_blank(),
panel.grid.minor.y = ggplot2::element_blank(),
axis.text = ggplot2::element_text(size = 10),
axis.text.x = ggplot2::element_text(margin = ggplot2::margin(t = 5)),
axis.text.y = ggplot2::element_text(margin = ggplot2::margin(r = 5)),
axis.title = ggplot2::element_text(size = 14),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 20),
hjust = 1),
axis.ticks = ggplot2::element_line(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 15),
hjust = 1),
axis.line = ggplot2::element_line()
)
}
ggplot(big_epa_cars, aes(fuelCost08)) +
geom_histogram() +
theme_clean_light()
horror_movies <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-10-22/horror_movies.csv")
library(tidyverse)
library(scales)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE)
glimpse(horror_movies)
horror_movies %>%
ggplot(aes(budget, movie_rating)) +
geom_point()
horror_movies %>%
ggplot(aes(budget, review_rating)) +
geom_point()
currency <- '$|£|€|INR'
horror <- horror_movies %>%
mutate(currency = str_extract(budget, currency))
View(horror)
currency <- '$|£|€|INR|$|$'
horror <- horror_movies %>%
mutate(currency = str_extract(budget, currency))
View(horror_movies)
View(horror)
horror <- horror_movies %>%
mutate(release = as.Date(release_date, format = '%d-%b_%y'))
View(horror)
?strptime()
horror <- horror_movies %>%
mutate(release = as.Date(release_date, format = '%d-%b-%y'))
View(horror)
library(lubridate)
horror <- horror_movies %>%
mutate(release = as.Date(release_date, format = '%d-%b-%y'),
release_year_1 = year(release))
View(horror)
horror <- horror_movies %>%
mutate(release = as.Date(release_date, format = '%d-%b-%y'),
release_year = coalesce(year(release), release_date))
horror <- horror_movies %>%
mutate(release = as.Date(release_date, format = '%d-%b-%y'),
release_year = coalesce(year(release), as.numeric(release_date)))
View(horror)
glimpse(horror)
horror %>%
ggplot(aes(release_year, review_rating )) +
geom_point()
source(paste0(here::here(), '/R/theme.R'))
horror %>%
ggplot(aes(release_year, review_rating )) +
geom_point() +
theme_clean_light()
horror %>%
ggplot(aes(release_year, review_rating )) +
geom_boxplot() +
theme_clean_light()
horror %>%
ggplot(aes(release_year, review_rating, group = release_year)) +
geom_boxplot() +
theme_clean_light()
glimpse(horror)
View(horror)
horror_text <- horror %>%
mutate(plot = str_replace('Directed by', ''))
horror_text <- horror %>%
mutate(plot = str_replace(plot, 'Directed by', ''))
glimpse(horror_text)
horror_text <- horror %>%
mutate(plot = str_replace(plot, 'Directed by ', ''))
glimpse(horror_text)
library(tidytext)
?unnest_tokens()
horror_text <- horror %>%
mutate(plot = str_replace(plot, 'Directed by ', '')) %>%
unnest_tokens(word, plot, token = "ngrams", n = 1)
horror_text <- horror %>%
mutate(id = row_number()) %>%
mutate(plot = str_replace(plot, 'Directed by ', '')) %>%
unnest_tokens(word, plot, token = "ngrams", n = 1)
horror %>%
ggplot(aes(release_year, review_rating, group = release_year)) +
geom_boxplot() +
theme_clean_light()
install.packages('ggbeeswarm')
library(ggbeeswarm)
horror %>%
ggplot(aes(release_year, review_rating, group = release_year)) +
geom_quasirandom()() +
theme_clean_light()
horror %>%
ggplot(aes(release_year, review_rating)) +
geom_quasirandom() +
theme_clean_light()
horror %>%
ggplot(aes(release_year, review_rating)) +
geom_quasirandom(alpha = .65) +
theme_clean_light()
View(horror_text)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE)
x <- tibble::tribble(
~group, ~name, ~value,
"A", "B", 1,
"A", "C", 2,
"A", "A", 3,
"B", "B", 4,
"B", "A", 5
)
View(x)
?tribble()
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE)
wine_ratings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-28/winemag-data-130k-v2.csv")
remotes::install_github("juliasilge/tidylo")
library(tidyverse)
library(tidytext)
library(glmnet)
library(tidylo)
wine_ratings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-28/winemag-data-130k-v2.csv")
glimpse(wine)
glimpse(wine_ratings)
wine_ratings %>%
ggplot(aes(points)) +
geom_histogram() +
theme_minimal()
summary(wine_ratings$points)
wine_ratings %>%
ggplot(aes(prince)) +
geom_histogram() +
theme_minimal()
wine_ratings %>%
ggplot(aes(price)) +
geom_histogram() +
theme_minimal()
summary(wine_ratings$price)
glimpse(wine_ratings)
summary(wine_ratings$points)
wine_ratings %>%
ggplot(aes(points)) +
geom_histogram() +
theme_minimal()
glimpse(wine_ratings)
summary(wine_ratings$points)
wine_ratings %>%
ggplot(aes(points)) +
geom_histogram() +
theme_minimal()
glimpse(wine_ratings)
wine_ratings %>%
ggplot(aes(province, points)) +
geom_boxplot() +
theme_minimal()
wine_ratings %>%
ggplot(aes(province, points,
group = province,
color = province)) +
geom_boxplot() +
theme_minimal()
wine_ratings %>%
ggplot(aes(province, points,
group = province,
color = province)) +
geom_boxplot() +
theme_minimal()
wine_ratings %>%
ggplot(aes(country, points,
group = country,
color = country)) +
geom_boxplot() +
theme_minimal()
wine_ratings %>%
ggplot(aes(country, points,
group = country,
color = country)) +
geom_boxplot() +
theme_minimal() +
guides(color = FALSE)
wine_ratings %>%
ggplot(aes(country, points,
group = country,
color = country)) +
geom_boxplot() +
theme_minimal() +
guides(color = FALSE) +
coord_flip()
glimpse(wine_ratings)
?unnest_tokens()
wine_text <- wine_ratings %>%
unnest_tokens(ngram, description, token = "ngrams", n = 2)
View(wine_ratings)
wine_log_odds <- wine_text %>%
count(ngram, X1)
View(wine_log_odds)
wine_text <- wine_ratings %>%
unnest_tokens(ngram, description, token = "ngrams", n = 1)
View(wine_text)
wine_log_odds <- wine_text %>%
count(ngram, X1)
wine_log_odds <- wine_text %>%
count(ngram, X1) %>%
bind_log_odds(X1, ngram, n)
View(wine_log_odds)
